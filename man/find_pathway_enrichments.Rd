% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pathway_enrichment.R
\name{find_pathway_enrichments}
\alias{find_pathway_enrichments}
\title{Find Pathway Enrichments}
\usage{
find_pathway_enrichments(
  mzroll_list,
  regression_significance,
  pathway_list,
  ranking_measure = "statistic",
  test_absolute_effects = TRUE
)
}
\arguments{
\item{mzroll_list}{output of \link{process_mzroll} or
  \link{process_mzroll_multi}

\itemize{
  \item{features: one row per unique analyte (defined by a
    unique groupId)},
  \item{samples: one row per unique sample (defined by a unique sampleId)},
  \item{measurements: one row per peak (samples x peakgroups)}
  }}

\item{regression_significance}{returned by \code{\link{diffex_mzroll}};
a tibble of tests performed.}

\item{pathway_list}{a named list where names are pathways and entries
are groupIds belonging to each pathway}

\item{ranking_measure}{variable in \code{regression_significance} to use
when calculating enrichment.}

\item{test_absolute_effects}{If TRUE then only consider the magnitude of
test-statistics when calculating rankings for enrichment; if FALSE then
consider sign as well.}
}
\value{
a list containing:
\itemize{
  \item{enrichment_table: a tibble containing each term's enrichment for
    every pathway and an enrichment_plot}
  \item{enrichment_plots: pre-generated plots containing the most
    significant enrichments for each term}
  }
}
\description{
Find Pathway Enrichments
}
\examples{

library(dplyr)

regression_significance <- diffex_mzroll(
  nplug_mzroll_normalized,
  "normalized_log2_abundance",
  "limitation + limitation:DR + 0"
  )
pathway_nest <- nplug_mzroll_normalized$features \%>\%
 dplyr::select(groupId, pathway) \%>\%
 tidyr::nest(pathway_members = groupId)

pathway_list <- purrr::map(
 pathway_nest$pathway_members,
 function(x) {
   as.character(x$groupId)
   }
 )
names(pathway_list) <- pathway_nest$pathway

find_pathway_enrichments(
  mzroll_list = nplug_mzroll_normalized,
  regression_significance,
  pathway_list,
  test_absolute_effects = FALSE
  )

}
